--- a/ext/fox16_c/swigruby-orig.h	2019-09-26 19:14:23.482025979 +0200
+++ b/ext/fox16_c/swigruby.h	2019-09-26 19:47:26.515464720 +0200
@@ -1064,7 +1064,7 @@
 */
 static st_table* swig_ruby_trackings = NULL;

-static VALUE swig_ruby_trackings_count(ANYARGS) {
+static VALUE swig_ruby_trackings_count(ID id, VALUE *var) {
   return SWIG2NUM(swig_ruby_trackings->num_entries);
 }

@@ -1101,7 +1101,7 @@
     swig_ruby_trackings = (st_table*)NUM2SWIG(trackings_value);
   }

-  rb_define_virtual_variable("SWIG_TRACKINGS_COUNT", swig_ruby_trackings_count, NULL);
+  rb_define_virtual_variable("SWIG_TRACKINGS_COUNT", swig_ruby_trackings_count, (void (*)(VALUE, ID, VALUE*))NULL);
 }

 /* Add a Tracking from a C/C++ struct to a Ruby object */
@@ -1149,13 +1149,13 @@
    to the passed callback function. */

 /* Proxy method to abstract the internal trackings datatype */
-static int swig_ruby_internal_iterate_callback(void* ptr, VALUE obj, void(*meth)(void* ptr, VALUE obj)) {
-  (*meth)(ptr, obj);
+static int swig_ruby_internal_iterate_callback(st_data_t ptr, st_data_t obj, st_data_t meth) {
+  ((void(*)(void*, VALUE))meth)((void*)ptr, (VALUE)obj);
   return ST_CONTINUE;
 }

 SWIGRUNTIME void SWIG_RubyIterateTrackings( void(*meth)(void* ptr, VALUE obj) ) {
-  st_foreach(swig_ruby_trackings, (int (*)(ANYARGS))&swig_ruby_internal_iterate_callback, (st_data_t)meth);
+  st_foreach(swig_ruby_trackings, swig_ruby_internal_iterate_callback, (st_data_t)meth);
 }

 #ifdef __cplusplus
